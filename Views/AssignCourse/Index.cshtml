@{
    ViewData["Title"] = "Assign Course";
}

<h1>Assign Course</h1>

<a href="@Url.Action("Create", "AssignCourse")" class="btn btn-secondary mb-3">Create New Assignment</a>

<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <!-- Faculty Search Input -->
        <div class="mb-4">
            <label class="form-label">Faculty</label>
            <div class="custom-select-container">
                <input type="text" id="facultySearch" name="FacultyName" value="@Context.Request.Query["FacultyName"]"
                       class="form-control border-primary" placeholder="Search Faculty" autocomplete="off" />
                <input type="hidden" id="facultyId" name="FacultyId" value="@Context.Request.Query["FacultyId"]" />
                <div id="facultyDropdown" class="custom-dropdown shadow">
                    <ul id="facultyList"></ul>
                </div>
            </div>
        </div>

        <!-- Major Search Input -->
        <div class="mb-3">
            <label class="form-label">Major</label>
            <div class="custom-select-container">
                <input type="text" id="majorSearch" name="MajorName" value="@Context.Request.Query["MajorName"]"
                       class="form-control border-primary" placeholder="Search Major" autocomplete="off" />
                <input type="hidden" id="majorId" name="MajorId" value="@Context.Request.Query["MajorId"]" />
                <div id="majorDropdown" class="custom-dropdown shadow">
                    <ul id="majorList"></ul>
                </div>
            </div>
        </div>

        <!-- Course Search Input -->
        <div class="mb-4">
            <label class="form-label">Course</label>
            <div class="custom-select-container">
                <input type="text" id="courseSearch" name="CourseName" value="@Context.Request.Query["CourseName"]"
                       class="form-control border-primary" placeholder="Search Course" autocomplete="off" />
                <input type="hidden" id="courseId" name="CourseId" value="@Context.Request.Query["CourseId"]" />
                <div id="courseDropdown" class="custom-dropdown shadow">
                    <ul id="courseList"></ul>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                function clearHiddenInput(inputField, hiddenField) {
                    inputField.addEventListener("input", function () {
                        if (inputField.value.trim().length === 0) {
                            hiddenField.value = "";
                        }
                    });
                }

                const facultySearch = document.getElementById("facultySearch");
                const facultyId = document.getElementById("facultyId");
                const majorSearch = document.getElementById("majorSearch");
                const majorId = document.getElementById("majorId");
                const courseSearch = document.getElementById("courseSearch");
                const courseId = document.getElementById("courseId");

                clearHiddenInput(facultySearch, facultyId);
                clearHiddenInput(majorSearch, majorId);
                clearHiddenInput(courseSearch, courseId);
            });
        </script>

        <!-- Section Dropdown -->
        <div class="col-md-2">
            <label class="form-label">Section</label>
            <select id="section" name="section" class="form-select border-primary">
                <option value="">Select a Section</option>
                @for (char sec = 'A'; sec <= 'J'; sec++)
                {
                    <option value="@sec">@sec</option>
                }
            </select>
        </div>

        <!-- Semester Dropdown -->
        <div class="col-md-6 mb-3">
            <label class="form-label">Semester</label>
            <select id="semester" name="semester" class="form-select border-primary">
                <option value="">Select a Semester</option>
                @for (int i = 1; i <= 15; i++)
                {
                    <option value="@i">Semester @i</option>
                }
            </select>
        </div>

        <script>
            function getUrlParameter(name) {
                const urlParams = new URLSearchParams(window.location.search);
                return urlParams.get(name);
            }

            const semesterValue = getUrlParameter("semester");
            if (semesterValue) document.getElementById("semester").value = semesterValue;

            const sectionValue = getUrlParameter("section");
            if (sectionValue) document.getElementById("section").value = sectionValue;
        </script>

        <!-- Year Input -->
        <div class="col-md-2">
            <label class="form-label">Year</label>
            <input type="number" required name="year" id="year" class="form-control" />
        </div>

        <script>
            const yearValue = getUrlParameter("year") || new Date().getFullYear();
            document.getElementById("year").value = yearValue;
        </script>

        <!-- Submit Button -->
        <div class="col-md-2 align-self-end">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </div>
</form>


<table class="table table-bordered">
    <thead>
        <tr>
			<th>Id</th>
            <th>Faculty</th>
            <th>Course</th>
            <th>Major</th>

            <th>Section</th>
            <th>Semester</th>
            <th>Year</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var assign in Model.AssignCourses)
        {
            <tr>
                <td>@assign.Id</td>

                <td>@assign.Faculty?.Name</td>
                <td>@assign.Course?.Name</td>
                <td>@assign.Major?.Name</td>
                <td>@assign.Section</td>
                <td>@assign.Semester</td>
                <td>@assign.Year</td>
                <td>
                    <!-- Edit Button -->
                    <a href="@Url.Action("Edit", "AssignCourse", new { id = assign.Id })" class="btn btn-warning btn-sm">Edit</a>

                    <!-- Delete Button -->
                    <a href="#" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteAssignCourseModal" data-id="@assign.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<nav>
    <ul class="pagination">
        @for (int i = 1; i <= Math.Ceiling((double)Model.TotalCount / Model.Limit); i++)
        {
            <li class="page-item @(i == Model.Page ? "active" : "")">
                <a class="page-link" href="?page=@i&limit=@Model.Limit"> @i </a>
            </li>
        }
    </ul>
</nav>

<!-- Modal -->
<div class="modal fade" id="deleteAssignCourseModal" tabindex="-1" aria-labelledby="deleteAssignCourseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAssignCourseModalLabel">Delete Assignment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this assignment?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" asp-action="Delete">
                    <input type="hidden" id="deleteAssignCourseId" name="id" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- jQuery and Live Search Script -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        const limit = 5;

        function searchItems(type, term, page) {
            $.ajax({
                url: '/Home/GetDropDownData',
                type: 'GET',
                data: { [`${type}Name`]: term, [`${type}Page`]: page, limit: limit },
                success: function (response) {
                    let listId = `#${type}Dropdown`;
                    $(listId).empty().show();

                    let items = response[type + 's'] || response.faculties;

                    if (Array.isArray(items) && items.length > 0) {
                        items.forEach(item => {
                            $(listId).append(`<li class="custom-dropdown-item" data-id="${item.id}">${item.name}</li>`);
                        });
                    } else {
                        $(listId).append('<li class="custom-dropdown-item">No results found</li>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching data:", error);
                }
            });
        }

        // Live search for Faculty
        $("#facultySearch").on("input", function () {
            let searchTerm = $(this).val();
            if (searchTerm.length >= 2) {
                searchItems('faculty', searchTerm, 1);
            } else {
                $("#facultyDropdown").hide();
            }
        });

        // Live search for Course
        $("#courseSearch").on("input", function () {
            let searchTerm = $(this).val();
            if (searchTerm.length >= 2) {
                searchItems('course', searchTerm, 1);
            } else {
                $("#courseDropdown").hide();
            }
        });

        // Live search for Major
        $("#majorSearch").on("input", function () {
            var searchTerm = $(this).val();
            if (searchTerm.length >= 2) {
                searchItems('major', searchTerm, 1);
            } else {
                $("#majorDropdown").hide();
            }
        });

        // Handle selecting an item from the dropdown
        $(document).on('click', '.custom-dropdown-item', function () {
            let itemId = $(this).data('id');
            let itemName = $(this).text();
            let inputBox = $(this).closest('.custom-select-container').find('input').first();
            let hiddenInput = $(this).closest('.custom-select-container').find('input[type="hidden"]');

            inputBox.val(itemName);
            hiddenInput.val(itemId);

            $(this).closest('.custom-dropdown').hide();
        });

        // Set AssignCourse ID for delete modal
        $('#deleteAssignCourseModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var assignCourseId = button.data('id'); // Extract AssignCourse ID from data-id
            $('#deleteAssignCourseId').val(assignCourseId); // Set the hidden input value
        });
    });
</script>

<style>
    .custom-dropdown {
        display: none;
        position: absolute;
        background: white;
        border: 1px solid #ddd;
        width: 100%;
        max-height: 150px;
        overflow-y: auto;
        list-style: none;
        padding: 0;
        margin: 0;
        z-index: 1000; /* Add this line to bring the dropdown above other elements */
    }


    .custom-dropdown-item {
        padding: 8px;
        cursor: pointer;
    }

        .custom-dropdown-item:hover {
            background: #f0f0f0;
        }

    .custom-select-container {
        position: relative;
    }
</style>
